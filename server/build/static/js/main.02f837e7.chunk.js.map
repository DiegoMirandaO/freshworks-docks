{"version":3,"sources":["Form/styles.js","Form/Title.jsx","Form/PlaceTimeSection.jsx","Form/FoodSection.jsx","Form/Form.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","container","display","flexWrap","alignItems","justifyContent","header","textField","label","input","height","marginLeft","marginRight","inputText","width","submit","formControl","minWidth","Title","props","classes","Typography","variant","className","PlaceTimeSection","handleChange","defaultTime","Grid","item","xs","Input","id","placeholder","type","required","onChange","event","defaultValue","inputProps","step","FoodSection","foodType","defaultFoodWheight","FormControl","InputLabel","htmlFor","Select","value","disabled","style","Form","useState","place","setPlace","time","setTime","setFoodType","foodWeight","setFoodWeight","ducksFedCount","setDucksFedCount","recurentFeed","setRecurentFed","target","console","log","handleSubmit","undefined","Error","warn","error","noValidate","autoComplete","onSubmit","Button","onClick","maxWidth","App","Paper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02f837e7.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport '@fontsource/roboto';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    header: {\n      textAlign: 'center',\n    },\n    textField: {\n      textAlign: 'left',\n    },\n    label: {\n      textAlign: 'left',\n    },\n    input: {\n      height: 50,\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    inputText: {\n      height: 50,\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '100%',\n    },\n    submit: {\n      height: 50,\n    },\n    formControl: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      minWidth: 120,\n    },\n  }));\n\nexport { useStyles };","import { Typography, } from '@material-ui/core';\nimport { useStyles } from './styles';\n\nfunction Title(props) {\n    const { text, header=false } = props;\n    const classes = useStyles();\n    return (\n        <Typography variant={header?'h2':'h5'} className={header?classes.header:classes.textField}>\n          {text}\n        </Typography>\n    );\n  }\n\nexport default Title;","import { Grid,Input, } from '@material-ui/core';\nimport { useStyles } from './styles';\nimport Title from './Title';\n\nfunction PlaceTimeSection(props) {\n    const { handleChange, defaultTime } = props;\n    const classes = useStyles();\n    return (\n      <>\n        <Grid item xs={12}>\n          <Title text=\"When and where?\"/>\n        </Grid>\n        <Grid item xs={4}>\n          <Input\n            id=\"place-fed\"\n            placeholder=\"Place\"\n            type='text'\n            required\n            className={classes.inputText}\n            onChange={(event)=>{ handleChange(event)}}\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <Input\n            id=\"time-fed\"\n            type=\"time\"\n            defaultValue={defaultTime}\n            className={classes.input}\n            onChange={(event)=>{handleChange(event)}}\n            required\n            inputProps={{\n              step: 900, // 15 min\n            }}\n          />\n        </Grid>\n      </>\n    );\n  }\n\nexport default PlaceTimeSection;","import { Grid, Input, InputLabel, Select, FormControl } from '@material-ui/core';\nimport { useStyles } from './styles';\nimport Title from './Title';\n\nfunction FoodSection(props) {\n  const { handleChange, foodType, defaultFoodWheight } = props;\n  const classes = useStyles();\n  return (\n      <>\n      <Grid item xs={12}>\n        <Title text=\"Food\" />\n      </Grid>\n      <Grid item xs={4}>\n        <FormControl \n          className={classes.inputText}\n          required>\n          <InputLabel htmlFor=\"food-type\">Food type</InputLabel>\n          <Select \n            required\n            id=\"food-type\"\n            value={foodType || \"default\"}\n            onChange={(event) => { handleChange(event) }}>\n            <option disabled value=\"default\">Select type</option>\n            <option value=\"pond-weed\">Pond weed</option>\n            <option value=\"seeds\">Seeds</option>\n            <option value=\"insects\">Insects</option>\n            <option value=\"worms\">Worms</option>\n            <option value=\"other\">Other</option>\n          </Select>\n        </FormControl>\n        </Grid>\n        <Grid item xs={4}>\n          <Input\n            id=\"food-weight\"\n            type=\"number\"\n            defaultValue={defaultFoodWheight}\n            className={classes.input}\n            style={{width: '64px'}}\n            onChange={(event) => { handleChange(event) }}\n            required\n            inputProps={{\n              step: 100,\n            }}\n          />(grams)\n        </Grid>\n      </>\n      );\n  }\n\n      export default FoodSection;","import { useState } from 'react';\nimport { Grid, Button } from '@material-ui/core';\nimport PlaceTimeSection from './PlaceTimeSection';\nimport FoodSection from './FoodSection';\nimport Title from './Title';\nimport { useStyles } from './styles';\n\n\n\n\n\nfunction Form() {\n  const classes = useStyles();\n  const [place, setPlace] = useState(\"\");\n  const [time, setTime] = useState(\"07:30\");\n  const [foodType, setFoodType] = useState(\"default\");\n  const [foodWeight, setFoodWeight] = useState(0);\n  const [ducksFedCount, setDucksFedCount] = useState(1);\n  const [recurentFeed, setRecurentFed] = useState(false);\n  \n  const handleChange = (event) => {\n    switch (event.target.id) {\n      case \"place-fed\":\n        console.log(\"Place\");\n        setPlace(event.target.value);\n        break;\n      case \"time-fed\":\n        console.log(\"Time\");\n        setTime(event.target.value);\n        break;\n      case \"food-type\":\n        console.log(\"Food Type\");\n        setFoodType(event.target.value);\n        break;\n      case \"food-weight\":\n        console.log(\"Food Weight\");\n        setFoodWeight(event.target.value);\n        break;\n      case \"docks-count\":\n        console.log(\"Docks\");\n        setDucksFedCount(event.target.value);\n        break;\n      case \"Recurrent\":\n        console.log(\"Recurrent\");\n        setRecurentFed(event.target.value);\n        break;\n      default:\n        break;\n    }\n    console.log(place, time, foodType, foodWeight, ducksFedCount, recurentFeed)\n  };\n\n  const handleSubmit = (event) => {\n    console.log(place, time, foodType, foodWeight, ducksFedCount, recurentFeed)\n    console.log(event)\n    // alert('A name was submitted: ');\n    // event.preventDefault();\n    try {\n      if(!place || !time || !foodType|| !foodWeight || !ducksFedCount || recurentFeed === undefined) {\n        console.log(place, time, foodType, foodWeight, ducksFedCount, recurentFeed)\n        console.log(!place, !time, !foodType, !foodWeight, !ducksFedCount, recurentFeed === undefined)\n        throw new Error('Incomplete data');\n      }\n      console.warn(\"FORM PASSED\");\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  \n  return (\n    <form  noValidate autoComplete=\"off\" onSubmit={handleSubmit} >\n      <Grid container spacing={3}>\n        <Grid item xs={12}> \n        <Title text=\"Feed Ducks\" header />\n        </Grid>\n        <PlaceTimeSection\n          defaultTime={time}\n          handleChange={handleChange}/>\n        <FoodSection \n          foodType={foodType}\n          defaultFoodWheight={foodWeight}\n          handleChange={handleChange}/>\n        <Grid item xs={6}> \n          <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} className={classes.submit}>\n            Feed\n          </Button>\n        </Grid>\n      </Grid>\n    </form >\n  );\n}\n\nexport default Form;\n","import { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n// import Grid from '@material-ui/core/Grid';\nimport '@fontsource/roboto';\nimport './App.css';\nimport DockForm from './Form/Form';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    maxWidth: 680,\n    padding: theme.spacing(2),\n    textAlign: 'left',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={`App ${classes.root}`}>\n      {/* <Grid spacing={3} alignItems=\"center\" alignContent=\"center\" className={classes.container}>\n        <Grid item xs={12}> */}\n          <Paper className={classes.paper}>\n            <DockForm/>\n          </Paper>\n        {/* </Grid> */}\n        {/* <Grid item xs={12}>\n          <Paper className={classes.paper}>\n          </Paper>\n        </Grid> */}\n      {/* </Grid> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}