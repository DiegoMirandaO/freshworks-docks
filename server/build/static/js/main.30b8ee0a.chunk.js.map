{"version":3,"sources":["Form.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","container","display","flexWrap","textField","textAlign","inputLabel","marginLeft","marginRight","Title","Grid","item","xs","Typography","variant","PlaceTimeSection","props","handleChange","defaultTime","classes","gutterBottom","className","Input","id","style","placeholder","type","fullWidth","required","onChange","event","defaultValue","inputProps","step","Form","useState","place","setPlace","time","setTime","handleSubmit","console","log","alert","preventDefault","noValidate","autoComplete","onSubmit","target","value","Button","color","onClick","flexGrow","paper","padding","palette","text","secondary","App","Paper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30b8ee0a.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { InputLabel, FormHelperText, TextField, Grid, Typography, FormControl, Input, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '@fontsource/roboto';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    textAlign: 'left',\n  },\n  inputLabel: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction Form() {\n  const classes = useStyles();\n  const [place, setPlace] = useState(\"\");\n  const [time, setTime] = useState(\"07:30\");\n  \n  const handleChange = (event) => {\n    switch (event.target.id) {\n      case \"place-fed\":\n        console.log(\"Place\");\n        setPlace(event.target.value);\n        break;\n      case \"time-fed\":\n        console.log(\"Time\");\n        setTime(event.target.value);\n        break;\n    \n      default:\n        break;\n    }\n    console.log(place, time)\n  };\n\n  const handleSubmit = (event) => {\n    console.log(place, time)\n    console.log(event)\n    alert('A name was submitted: ');\n    event.preventDefault();\n  }\n  \n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit} >\n      <Grid container spacing={3}>\n        <Title />\n        <PlaceTimeSection\n          defaultTime={time}\n          handleChange={handleChange}/>\n        </Grid>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n          Feed Ducks\n        </Button>\n    </form >\n  );\n}\n\n\nfunction Title() {\n  return (\n    <Grid item xs={12}>\n      <Typography variant=\"h2\">\n        Duck Feed\n      </Typography>\n    </Grid>\n  );\n}\n\nfunction PlaceTimeSection(props) {\n  const { handleChange, defaultTime } = props;\n  const classes = useStyles();\n  return (\n    <>\n      <Grid item xs={12}>\n        <Typography variant=\"h5\" gutterBottom className={classes.textField}>\n          When and where?\n        </Typography>\n      </Grid>\n      <Grid item xs={9}>\n        <Input\n          id=\"place-fed\"\n          style={{ margin: 8 }}\n          placeholder=\"Place\"\n          type='text'\n          fullWidth\n          required\n          onChange={(event)=>{ handleChange(event)}}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <Input\n          id=\"time-fed\"\n          type=\"time\"\n          style={{ margin: 8 }}\n          defaultValue={defaultTime}\n          className={classes.inputLabel}\n          onChange={(event)=>{handleChange(event)}}\n          required\n          inputProps={{\n            step: 900, // 15 min\n          }}\n        />\n      </Grid>\n    </>\n  );\n}\n\nexport default Form;\n","import { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport '@fontsource/roboto';\nimport './App.css';\nimport DockForm from './Form';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={`App ${classes.root}`}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <DockForm/>\n          </Paper>\n        </Grid>\n        {/* <Grid item xs={12}>\n          <Paper className={classes.paper}>\n          </Paper>\n        </Grid> */}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}